<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
    up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/"/>

    <!-- Package for scan -->
    <context:component-scan base-package="ru.dz"/>

    <!-- Use property files -->
    <context:property-placeholder location="classpath*:/*.properties"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
    in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>


    <!-- Hibernate -->
    <!-- Manage transaction using @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Transaction manager -->
    <beans:bean id="transactionManager"
                class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory"/>
    </beans:bean>

    <!-- Data source -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="${database.driverClassName}"/>
        <beans:property name="url" value="${database.url}"/>
        <beans:property name="username" value="${database.username}"/>
        <beans:property name="password" value="${database.password}"/>
    </beans:bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>ru.dz.quotewebapp.model.Quote</beans:value>
                <beans:value>ru.dz.quotewebapp.model.User</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.show_sql">${database.show_sql}</beans:prop>
                <beans:prop key="hibernate.format_sql">${database.format_sql}</beans:prop>
                <beans:prop key="hibernate.use_sql_comments">${database.use_sql_comments}</beans:prop>
                <beans:prop key="hibernate.dialect">${database.dialect}</beans:prop>
                <beans:prop key="hibernate.connection.useUnicode">${database.useUnicode}</beans:prop>
                <beans:prop key="hibernate.connection.characterEncoding">${database.characterEncoding}</beans:prop>
                <beans:prop key="hibernate.connection.charSet">${database.charSet}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

</beans:beans>